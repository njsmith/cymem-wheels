env:
    global:
        - REPO_DIR=checkout
        # The explosion.ai packages all have a requirements.txt with
        # all their build + test requirements.
        - BUILD_DEPENDS="-Ur checkout/requirements.txt"
        - TEST_DEPENDS="-Ur checkout/requirements.txt"
        - PLAT=x86_64
        - UNICODE_WIDTH=32
        - WHEELHOUSE_UPLOADER_USERNAME=travis-worker

language: python
sudo: required
dist: xenial
services: docker
# Don't generate builds for tags, PRs, or the master branch
# https://docs.travis-ci.com/user/conditional-builds-stages-jobs/
# https://docs.travis-ci.com/user/conditions-v1
if: type = push AND tag IS blank AND (branch =~ /^branch-for-/ OR branch = master)

matrix:
  include:
    - os: linux
      env: MB_PYTHON_VERSION=2.7
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
        - PLAT=i686
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=2.7
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.5
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.6
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.7

before_install:
    - echo $GITHUB_SECRET_TOKEN
    - pip install -Ur ./mb-requirements.txt
    - eval $(python ./mb.py build_spec_to_shell build-spec.json)
    - git clone "${BUILD_SPEC_CLONE_URL}" "$REPO_DIR"
    - export BUILD_COMMIT="${BUILD_SPEC_COMMIT}"
    - printf "function run_tests {\n  pytest --pyargs ${BUILD_SPEC_PACKAGE_NAME} \n}" > config.sh
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $BUILD_COMMIT
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

after_success:
    - pip install -Ur ./mb-requirements.txt
    - python ./mb.py upload --build-spec build-spec.json ${TRAVIS_BUILD_DIR}/wheelhouse
